// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#ifndef PROTOBUF_config_2eproto__INCLUDED
#define PROTOBUF_config_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace test {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_config_2eproto();
void protobuf_AssignDesc_config_2eproto();
void protobuf_ShutdownFile_config_2eproto();

class Conf;

// ===================================================================

class Conf : public ::google::protobuf::Message {
 public:
  Conf();
  virtual ~Conf();

  Conf(const Conf& from);

  inline Conf& operator=(const Conf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Conf& default_instance();

  void Swap(Conf* other);

  // implements Message ----------------------------------------------

  Conf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Conf& from);
  void MergeFrom(const Conf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 size_h = 1;
  inline bool has_size_h() const;
  inline void clear_size_h();
  static const int kSizeHFieldNumber = 1;
  inline ::google::protobuf::int32 size_h() const;
  inline void set_size_h(::google::protobuf::int32 value);

  // required int32 size_w = 2;
  inline bool has_size_w() const;
  inline void clear_size_w();
  static const int kSizeWFieldNumber = 2;
  inline ::google::protobuf::int32 size_w() const;
  inline void set_size_w(::google::protobuf::int32 value);

  // required int32 round_long = 3;
  inline bool has_round_long() const;
  inline void clear_round_long();
  static const int kRoundLongFieldNumber = 3;
  inline ::google::protobuf::int32 round_long() const;
  inline void set_round_long(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.Conf)
 private:
  inline void set_has_size_h();
  inline void clear_has_size_h();
  inline void set_has_size_w();
  inline void clear_has_size_w();
  inline void set_has_round_long();
  inline void clear_has_round_long();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 size_h_;
  ::google::protobuf::int32 size_w_;
  ::google::protobuf::int32 round_long_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_config_2eproto();
  friend void protobuf_AssignDesc_config_2eproto();
  friend void protobuf_ShutdownFile_config_2eproto();

  void InitAsDefaultInstance();
  static Conf* default_instance_;
};
// ===================================================================


// ===================================================================

// Conf

// required int32 size_h = 1;
inline bool Conf::has_size_h() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Conf::set_has_size_h() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Conf::clear_has_size_h() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Conf::clear_size_h() {
  size_h_ = 0;
  clear_has_size_h();
}
inline ::google::protobuf::int32 Conf::size_h() const {
  return size_h_;
}
inline void Conf::set_size_h(::google::protobuf::int32 value) {
  set_has_size_h();
  size_h_ = value;
}

// required int32 size_w = 2;
inline bool Conf::has_size_w() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Conf::set_has_size_w() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Conf::clear_has_size_w() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Conf::clear_size_w() {
  size_w_ = 0;
  clear_has_size_w();
}
inline ::google::protobuf::int32 Conf::size_w() const {
  return size_w_;
}
inline void Conf::set_size_w(::google::protobuf::int32 value) {
  set_has_size_w();
  size_w_ = value;
}

// required int32 round_long = 3;
inline bool Conf::has_round_long() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Conf::set_has_round_long() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Conf::clear_has_round_long() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Conf::clear_round_long() {
  round_long_ = 0;
  clear_has_round_long();
}
inline ::google::protobuf::int32 Conf::round_long() const {
  return round_long_;
}
inline void Conf::set_round_long(::google::protobuf::int32 value) {
  set_has_round_long();
  round_long_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2eproto__INCLUDED
